(window.webpackJsonp=window.webpackJsonp||[]).push([[1],{175:function(n,t,e){"use strict";var o=e(181);e.d(t,"a",(function(){return o.a}))},176:function(n,t,e){var content=e(189);"string"==typeof content&&(content=[[n.i,content,""]]),content.locals&&(n.exports=content.locals);(0,e(33).default)("20128b8e",content,!0,{sourceMap:!1})},177:function(n,t,e){var content=e(195);"string"==typeof content&&(content=[[n.i,content,""]]),content.locals&&(n.exports=content.locals);(0,e(33).default)("f7581a2a",content,!0,{sourceMap:!1})},178:function(n,t,e){var content=e(203);"string"==typeof content&&(content=[[n.i,content,""]]),content.locals&&(n.exports=content.locals);(0,e(33).default)("598630cd",content,!0,{sourceMap:!1})},179:function(n,t,e){var content=e(205);"string"==typeof content&&(content=[[n.i,content,""]]),content.locals&&(n.exports=content.locals);(0,e(33).default)("a428ac08",content,!0,{sourceMap:!1})},180:function(n,t,e){"use strict";var o=e(175),c=e(184),l={components:{Typography:o.a,Logo:c.a}},r=(e(202),e(34)),component=Object(r.a)(l,(function(){var n=this.$createElement,t=this._self._c||n;return t("footer",{staticClass:"footer"},[t("ul",{staticClass:"social-network"},[t("li",[t("Typography",{attrs:{component:"a",rel:"noopener",target:"_blank",href:"https://twitter.com/berthel350"}},[t("img",{attrs:{src:"/assets/twitter.svg",alt:""}}),this._v("\n        Twitter\n      ")])],1),this._v(" "),t("li",[t("Typography",{attrs:{component:"a",rel:"noopener",target:"_blank",href:"https://www.linkedin.com/in/florent-berthelot-a2678861/"}},[t("img",{attrs:{src:"/assets/linkedin.svg",alt:""}}),this._v("\n        Linkedin\n      ")])],1),this._v(" "),t("li",[t("Typography",{attrs:{component:"a",rel:"noopener",target:"_blank",href:"https://github.com/FBerthelot"}},[t("img",{attrs:{src:"/assets/github.svg",alt:""}}),this._v("\n        Github\n      ")])],1),this._v(" "),t("li",[t("Typography",{attrs:{component:"a",href:"mailto:florent@berthelot.io"}},[t("img",{attrs:{src:"/assets/email.svg",alt:""}}),this._v("\n        Mail\n      ")])],1)])])}),[],!1,null,"586db0d2",null);t.a=component.exports},181:function(n,t,e){"use strict";var o={name:"Typography",props:{component:{type:String,required:!1,default:"p"},variant:{type:String,required:!1,default:"default"},color:{type:String,required:!1,default:"white"}},render:function(n){return n(this.component,{class:"typographyBase ".concat(this.variant," ").concat(this.color)},this.$slots.default)}},c=(e(188),e(34)),component=Object(c.a)(o,void 0,void 0,!1,null,"13b76019",null);t.a=component.exports},183:function(n,t,e){"use strict";e.d(t,"d",(function(){return B})),e.d(t,"b",(function(){return H})),e.d(t,"a",(function(){return $})),e.d(t,"c",(function(){return Q}));var o=e(118),c=(e(56),e(17),e(18),e(12),e(41),e(20)),l=e(238),r=e.n(l),k=e(239),d=e.n(k),m=e(240),h=e.n(m),f=e(241),v=e.n(f),w=e(242),y=e.n(w);function x(object,n){var t=Object.keys(object);if(Object.getOwnPropertySymbols){var e=Object.getOwnPropertySymbols(object);n&&(e=e.filter((function(n){return Object.getOwnPropertyDescriptor(object,n).enumerable}))),t.push.apply(t,e)}return t}var j=[r.a,d.a,h.a,v.a,y.a].map((function(s){return function(n){for(var i=1;i<arguments.length;i++){var source=null!=arguments[i]?arguments[i]:{};i%2?x(Object(source),!0).forEach((function(t){Object(c.a)(n,t,source[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(n,Object.getOwnPropertyDescriptors(source)):x(Object(source)).forEach((function(t){Object.defineProperty(n,t,Object.getOwnPropertyDescriptor(source,t))}))}return n}({},s,{type:"talk"})})),O=e(243),_=e.n(O),N=e(244),C=e.n(N),S=e(245),T=e.n(S),A=e(246),P=e.n(A),I=e(247),L=e.n(I);function D(object,n){var t=Object.keys(object);if(Object.getOwnPropertySymbols){var e=Object.getOwnPropertySymbols(object);n&&(e=e.filter((function(n){return Object.getOwnPropertyDescriptor(object,n).enumerable}))),t.push.apply(t,e)}return t}var E=[C.a,T.a,_.a,L.a,P.a].map((function(s){return function(n){for(var i=1;i<arguments.length;i++){var source=null!=arguments[i]?arguments[i]:{};i%2?D(Object(source),!0).forEach((function(t){Object(c.a)(n,t,source[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(n,Object.getOwnPropertyDescriptors(source)):D(Object(source)).forEach((function(t){Object.defineProperty(n,t,Object.getOwnPropertyDescriptor(source,t))}))}return n}({},s,{type:"course"})}));function M(object,n){var t=Object.keys(object);if(Object.getOwnPropertySymbols){var e=Object.getOwnPropertySymbols(object);n&&(e=e.filter((function(n){return Object.getOwnPropertyDescriptor(object,n).enumerable}))),t.push.apply(t,e)}return t}var R=[{name:"React refactoring: Kills of the legacy with snapshot testing (part 1)",slug:"react-test-refactoring-snapshot",content:'<section><img alt="The refactoring cowboy" src="/illustrations/cowboy.jpg" class="main-image" />\n<p>Once upon a time, there was a poor lonesome cowboy developer. He had a long long code to refactor. Whenever he went to a new town, he shot the legacy code faster than his shadow.</p>\n<p>He is a contractor, so he joins teams for that purpose, to refactor and to improve software quality.</p>\n<p>While the cowboy developer read the legacy code, he tends to refactor everything. He write clean new code and test his code properly. But, in the end, his refactoring always stumbles upon some edge case that he was not aware of and here it comes… Despite the tests he had created, he has introduced some bugs! 😨.</p>\n<p>What\'s wrong with this process ?</p>\n<p>There are two major breaches in his way of refactoring:</p>\n<ul>\n<li>our cowboy is refactoring a whole system without knowing the exact behavior</li>\n<li>our cowboy is testing his code according to the refactored code and not according to both legacy and new code.</li>\n</ul>\n<p>While the first mistake is hard to fix, we will improve the cowboy developer\'s process by changing the way he refactor the code.</p>\n<h2>Testing legacy code</h2>\n<p>The first step to successfully refactor a piece of code is to add tests to the legacy code. But tests should always refer to a behavior while keeping in mind empathy with the user. It\'s impossible to do that when you don\'t know the behaviour!</p>\n<p>We have to find another way to achieve that. The first tool we will use is snapshot testing using Jest.</p>\n<p>What is a snapshot test? It\'s simple:</p>\n<ul>\n<li>Take a picture of a component</li>\n<li>Modify the code</li>\n<li>Take another picture after the code was changed</li>\n<li>Compare both pictures (before and after the refactoring). They should look exactly the same.</li>\n</ul>\n<p>It means the output of the component should be the same before and after the refactoring. Let\'s try this with some code.</p>\n<p>Imagine an application our cowboy developer uses for counting cows and keep some data on them. Here is the application:</p>\n<p>The code:</p>\n<pre><code class="language-jsx"><span class="token keyword">import</span> React <span class="token keyword">from</span> <span class="token string">"react"</span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> <span class="token string">"bulma"</span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> <span class="token string">"./styles.css"</span><span class="token punctuation">;</span>\n\n<span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token keyword">function</span> <span class="token function">App</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n  <span class="token keyword">return</span> <span class="token punctuation">(</span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">className</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>App<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token plain-text">\n      </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h1</span><span class="token punctuation">></span></span><span class="token plain-text">MY COWS</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h1</span><span class="token punctuation">></span></span><span class="token plain-text">\n\n      </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>section</span> <span class="token attr-name">className</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>cows<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token plain-text">\n        </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">className</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>card<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token plain-text">\n          </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">className</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>card-image<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token plain-text">\n            </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>figure</span> <span class="token attr-name">className</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>image is-4by3<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token plain-text">\n              </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>img</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>https://lh3.googleusercontent.com/eLxDr87icLAQlzF2LFIig62i46hm7f8sH77zIaZX6t64kFsjHlok6QMyCiReOzBcfpkPTZSv3g=w640-h400-e365<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span><span class="token plain-text">\n            </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>figure</span><span class="token punctuation">></span></span><span class="token plain-text">\n          </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span><span class="token plain-text">\n\n          </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">className</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>card-content<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token plain-text">\n            </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">className</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>media<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token plain-text">\n              </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">className</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>media-content<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token plain-text">\n                </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span> <span class="token attr-name">className</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>title is-4<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token plain-text">Margueritte</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span><span class="token plain-text">\n                </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span> <span class="token attr-name">className</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>subtitle is-6<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token plain-text">Field A</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span><span class="token plain-text">\n              </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span><span class="token plain-text">\n            </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span><span class="token plain-text">\n\n            </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">className</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>content<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token plain-text">\n              She love organize poker game in the basment of the farm.\n            </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span><span class="token plain-text">\n          </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span><span class="token plain-text">\n        </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span><span class="token plain-text">\n\n        </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">className</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>card<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token plain-text">\n          </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">className</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>card-image<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token plain-text">\n            </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>figure</span> <span class="token attr-name">className</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>image is-4by3<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token plain-text">\n              </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>img</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>https://image.posterlounge.fr/img/products/650000/649832/649832_poster_l.jpg<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span><span class="token plain-text">\n            </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>figure</span><span class="token punctuation">></span></span><span class="token plain-text">\n          </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span><span class="token plain-text">\n\n          </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">className</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>card-content<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token plain-text">\n            </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">className</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>media<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token plain-text">\n              </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">className</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>media-content<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token plain-text">\n                </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span> <span class="token attr-name">className</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>title is-4<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token plain-text">Thérèse</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span><span class="token plain-text">\n                </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span> <span class="token attr-name">className</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>subtitle is-6<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token plain-text">Field A</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span><span class="token plain-text">\n              </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span><span class="token plain-text">\n            </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span><span class="token plain-text">\n\n            </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">className</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>content<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token plain-text">\n              During the confinement, her hair grown up significantly.\n            </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span><span class="token plain-text">\n          </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span><span class="token plain-text">\n        </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span><span class="token plain-text">\n\n        </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">className</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>card<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token plain-text">\n          </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">className</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>card-image<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token plain-text">\n            </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>figure</span> <span class="token attr-name">className</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>image is-4by3<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token plain-text">\n              </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>img</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>https://oldmooresalmanac.com/wp-content/uploads/2017/11/cow-2896329_960_720-Copy-476x459.jpg<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span><span class="token plain-text">\n            </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>figure</span><span class="token punctuation">></span></span><span class="token plain-text">\n          </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span><span class="token plain-text">\n\n          </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">className</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>card-content<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token plain-text">\n            </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">className</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>media<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token plain-text">\n              </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">className</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>media-content<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token plain-text">\n                </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span> <span class="token attr-name">className</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>title is-4<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token plain-text">Evelyne</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span><span class="token plain-text">\n                </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span> <span class="token attr-name">className</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>subtitle is-6<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token plain-text">Field B</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span><span class="token plain-text">\n              </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span><span class="token plain-text">\n            </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span><span class="token plain-text">\n\n            </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">className</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>content<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token plain-text">She smile to me, it\'s weird.</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span><span class="token plain-text">\n          </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span><span class="token plain-text">\n        </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span><span class="token plain-text">\n      </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>section</span><span class="token punctuation">></span></span><span class="token plain-text">\n    </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>\n  <span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n</code></pre>\n<p>The application:</p>\n<iframe\n     src="https://codesandbox.io/embed/github/FBerthelot/my-cows-react-refactoring-kata/tree/master/?fontsize=14&hidenavigation=1&theme=dark&view=preview"\n     style="width:100%; height:500px; border:0; border-radius: 4px; overflow:hidden;"\n     title="my-cows-react-refactoring-kata"\n     allow="accelerometer; ambient-light-sensor; camera; encrypted-media; geolocation; gyroscope; hid; microphone; midi; payment; usb; vr; xr-spatial-tracking"\n     sandbox="allow-autoplay allow-forms allow-modals allow-popups allow-presentation allow-same-origin allow-scripts"\n   ></iframe>\n<p>As you can see, the application is quite simple but it doesn\'t rely at all on React as no component has been created. So the first thing we want to do is to create a Cow component.</p>\n<p>In order to have the best refactoring workflow possible, we need to add tests on the application first.</p>\n<h3>Rendering the component to get a snapshot</h3>\n<p>In the React ecosystem, there are 2 major libraries to test components: Enzyme and @testing-library.<br>\nI’ve also created <a href="https://component-test-utils.berthelot.io/">my own library, component-test-utils</a> earlier this year and I will write the tests with each library so you can have the one you use in an example.</p>\n<p>Whichever test library you’re using, make sure to render all the React tree and not only one component, so please <em>do not use any mock while you are refactoring</em>.</p>\n<pre><code class="language-jsx"><span class="token keyword">import</span> App <span class="token keyword">from</span> <span class="token string">"./App"</span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> React <span class="token keyword">from</span> <span class="token string">"react"</span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> renderer <span class="token keyword">from</span> <span class="token string">"react-test-renderer"</span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> <span class="token punctuation">{</span>shallow<span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">"component-test-utils-react"</span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> <span class="token punctuation">{</span>render<span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">"@testing-library/react"</span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> Enzyme<span class="token punctuation">,</span> <span class="token punctuation">{</span>mount<span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'enzyme\'</span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> Adapter <span class="token keyword">from</span> <span class="token string">\'enzyme-adapter-react-16\'</span><span class="token punctuation">;</span>\n\nEnzyme<span class="token punctuation">.</span><span class="token function">configure</span><span class="token punctuation">(</span><span class="token punctuation">{</span> adapter<span class="token operator">:</span> <span class="token keyword">new</span> <span class="token class-name">Adapter</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n<span class="token comment">// React test render</span>\n<span class="token function">describe</span><span class="token punctuation">(</span><span class="token string">"App - react-test-render - Refactoring Tests"</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n  <span class="token function">it</span><span class="token punctuation">(</span><span class="token string">"should look the same"</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n    <span class="token keyword">const</span> tree <span class="token operator">=</span> renderer<span class="token punctuation">.</span><span class="token function">create</span><span class="token punctuation">(</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">App</span></span> <span class="token punctuation">/></span></span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toJSON</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token function">expect</span><span class="token punctuation">(</span>tree<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toMatchSnapshot</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n\n<span class="token comment">// Enzyme</span>\n<span class="token function">describe</span><span class="token punctuation">(</span><span class="token string">"App - enzyme - Refactoring Tests"</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n  <span class="token function">it</span><span class="token punctuation">(</span><span class="token string">"should look the same"</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n    <span class="token keyword">const</span> component <span class="token operator">=</span> <span class="token function">mount</span><span class="token punctuation">(</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">App</span></span> <span class="token punctuation">/></span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token function">expect</span><span class="token punctuation">(</span>component<span class="token punctuation">.</span><span class="token function">html</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toMatchSnapshot</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n<span class="token comment">// component-test-utils-react</span>\n<span class="token function">describe</span><span class="token punctuation">(</span><span class="token string">"App - component-test-utils-react - Refactoring Tests"</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n  <span class="token function">it</span><span class="token punctuation">(</span><span class="token string">"should look the same"</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n    <span class="token keyword">const</span> component <span class="token operator">=</span> <span class="token function">shallow</span><span class="token punctuation">(</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">App</span></span> <span class="token punctuation">/></span></span><span class="token punctuation">,</span> <span class="token punctuation">{</span>blackList<span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token function">expect</span><span class="token punctuation">(</span>component<span class="token punctuation">.</span><span class="token function">html</span><span class="token punctuation">(</span><span class="token punctuation">{</span>snapshot<span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toMatchSnapshot</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n<span class="token comment">// @testing-library</span>\n<span class="token function">describe</span><span class="token punctuation">(</span><span class="token string">"App - @testing-library/react - Refactoring Tests"</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n  <span class="token function">it</span><span class="token punctuation">(</span><span class="token string">"should look the same"</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n    <span class="token keyword">const</span> <span class="token punctuation">{</span>container<span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token function">render</span><span class="token punctuation">(</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">App</span></span> <span class="token punctuation">/></span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token function">expect</span><span class="token punctuation">(</span>container<span class="token punctuation">.</span>firstChild<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toMatchSnapshot</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n</code></pre>\n<p>When executing the tests for the first time, Jest will create a <code>__snapshots__</code> folder with a copy of your React tree. If you make any change, Jest will verify if the new code generates the same React tree.</p>\n<h3>Creating a Cow component</h3>\n<p>Now we can start developing a Cow component using TDD as usual.</p>\n<pre><code class="language-jsx"><span class="token keyword">import</span> React <span class="token keyword">from</span> <span class="token string">\'react\'</span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> <span class="token punctuation">{</span>Cow<span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'./Cow\'</span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> <span class="token punctuation">{</span>shallow<span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">"component-test-utils-react"</span><span class="token punctuation">;</span>\n\n<span class="token function">describe</span><span class="token punctuation">(</span><span class="token string">\'Cow\'</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n  <span class="token keyword">const</span> cow <span class="token operator">=</span> <span class="token punctuation">{</span>\n    name<span class="token operator">:</span> <span class="token string">\'Margueritte\'</span><span class="token punctuation">,</span>\n    location<span class="token operator">:</span> <span class="token string">\'Field A\'</span><span class="token punctuation">,</span>\n    description<span class="token operator">:</span> <span class="token string">\'She\\\'s smiling at me, it\\\'s weird.\'</span><span class="token punctuation">,</span>\n    image<span class="token operator">:</span> <span class="token string">\'http://toto.toto.com\'</span>\n  <span class="token punctuation">}</span>\n  <span class="token function">it</span><span class="token punctuation">(</span><span class="token string">\'should display cow name\'</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n    <span class="token keyword">const</span> component <span class="token operator">=</span> <span class="token function">shallow</span><span class="token punctuation">(</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Cow</span></span> <span class="token attr-name">cow</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>cow<span class="token punctuation">}</span></span><span class="token punctuation">/></span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token function">expect</span><span class="token punctuation">(</span>component<span class="token punctuation">.</span><span class="token function">html</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toContain</span><span class="token punctuation">(</span>cow<span class="token punctuation">.</span>name<span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n  <span class="token function">it</span><span class="token punctuation">(</span><span class="token string">\'should display where the cow is\'</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n    <span class="token keyword">const</span> component <span class="token operator">=</span> <span class="token function">shallow</span><span class="token punctuation">(</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Cow</span></span> <span class="token attr-name">cow</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>cow<span class="token punctuation">}</span></span><span class="token punctuation">/></span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token function">expect</span><span class="token punctuation">(</span>component<span class="token punctuation">.</span><span class="token function">html</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toContain</span><span class="token punctuation">(</span>cow<span class="token punctuation">.</span>location<span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n  <span class="token function">it</span><span class="token punctuation">(</span><span class="token string">\'should display the cow\\\'s description\'</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n    <span class="token keyword">const</span> component <span class="token operator">=</span> <span class="token function">shallow</span><span class="token punctuation">(</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Cow</span></span> <span class="token attr-name">cow</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>cow<span class="token punctuation">}</span></span><span class="token punctuation">/></span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token function">expect</span><span class="token punctuation">(</span>component<span class="token punctuation">.</span><span class="token function">html</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toContain</span><span class="token punctuation">(</span>cow<span class="token punctuation">.</span>description<span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n  <span class="token function">it</span><span class="token punctuation">(</span><span class="token string">\'should display the cow\\\'s image\'</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n    <span class="token keyword">const</span> component <span class="token operator">=</span> <span class="token function">shallow</span><span class="token punctuation">(</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Cow</span></span> <span class="token attr-name">cow</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>cow<span class="token punctuation">}</span></span><span class="token punctuation">/></span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token function">expect</span><span class="token punctuation">(</span>component<span class="token punctuation">.</span><span class="token function">html</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toContain</span><span class="token punctuation">(</span>cow<span class="token punctuation">.</span>image<span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span>\n</code></pre>\n<p>As you can see we test that each data sent to the component is displayed no matter the HTML tree. The Cow component is very simple, nothing special here.</p>\n<pre><code class="language-jsx"><span class="token keyword">import</span> React <span class="token keyword">from</span> <span class="token string">\'react\'</span><span class="token punctuation">;</span>\n\n<span class="token keyword">export</span> <span class="token keyword">const</span> <span class="token function-variable function">Cow</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter"><span class="token punctuation">{</span>cow<span class="token punctuation">}</span></span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n  <span class="token keyword">return</span> <span class="token punctuation">(</span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">className</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>card<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token plain-text">\n      </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">className</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>card-image<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token plain-text">\n        </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>figure</span> <span class="token attr-name">className</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>image is-4by3<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token plain-text">\n          </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>img</span> <span class="token attr-name">src</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>cow<span class="token punctuation">.</span>image<span class="token punctuation">}</span></span> <span class="token punctuation">/></span></span><span class="token plain-text">\n        </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>figure</span><span class="token punctuation">></span></span><span class="token plain-text">\n      </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span><span class="token plain-text">\n\n      </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">className</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>card-content<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token plain-text">\n        </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">className</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>media<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token plain-text">\n          </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">className</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>media-content<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token plain-text">\n            </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span> <span class="token attr-name">className</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>title is-4<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token punctuation">{</span>cow<span class="token punctuation">.</span>name<span class="token punctuation">}</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span><span class="token plain-text">\n            </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span> <span class="token attr-name">className</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>subtitle is-6<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token punctuation">{</span>cow<span class="token punctuation">.</span>location<span class="token punctuation">}</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span><span class="token plain-text">\n          </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span><span class="token plain-text">\n        </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span><span class="token plain-text">\n\n        </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">className</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>content<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token punctuation">{</span>cow<span class="token punctuation">.</span>description<span class="token punctuation">}</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span><span class="token plain-text">\n      </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span><span class="token plain-text">\n    </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>\n  <span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n</code></pre>\n<h3>Using the Cow component</h3>\n<p>The Cow component is ready now, it\'s time for our cowboy to destroy the old code and use his new Cow card.</p>\n<pre><code class="language-jsx"><span class="token keyword">import</span> React <span class="token keyword">from</span> <span class="token string">"react"</span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> <span class="token string">"bulma"</span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> <span class="token string">"./styles.css"</span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> <span class="token punctuation">{</span>Cow<span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'./Cow\'</span><span class="token punctuation">;</span>\n\n<span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token keyword">function</span> <span class="token function">App</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n  <span class="token keyword">const</span> cows <span class="token operator">=</span> <span class="token punctuation">[</span>\n    <span class="token punctuation">{</span>\n      name<span class="token operator">:</span> <span class="token string">\'Margueritte\'</span><span class="token punctuation">,</span>\n      image<span class="token operator">:</span> <span class="token string">\'https://lh3.googleusercontent.com/eLxDr87icLAQlzF2LFIig62i46hm7f8sH77zIaZX6t64kFsjHlok6QMyCiReOzBcfpkPTZSv3g=w640-h400-e365\'</span><span class="token punctuation">,</span>\n      location<span class="token operator">:</span> <span class="token string">\'Field A\'</span><span class="token punctuation">,</span>\n      description<span class="token operator">:</span> <span class="token string">\'She loves organizing poker games in the basement of the farm.\'</span>\n    <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    <span class="token punctuation">{</span>\n      name<span class="token operator">:</span> <span class="token string">\'Thérèse\'</span><span class="token punctuation">,</span>\n      image<span class="token operator">:</span> <span class="token string">\'https://image.posterlounge.fr/img/products/650000/649832/649832_poster_l.jpg\'</span><span class="token punctuation">,</span>\n      location<span class="token operator">:</span> <span class="token string">\'Field A\'</span><span class="token punctuation">,</span>\n      description<span class="token operator">:</span> <span class="token string">\'During the confinement, her hair grew significantly.\'</span>\n    <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    <span class="token punctuation">{</span>\n      name<span class="token operator">:</span> <span class="token string">\'Evelyne\'</span><span class="token punctuation">,</span>\n      image<span class="token operator">:</span> <span class="token string">\'https://oldmooresalmanac.com/wp-content/uploads/2017/11/cow-2896329_960_720-Copy-476x459.jpg\'</span><span class="token punctuation">,</span>\n      location<span class="token operator">:</span> <span class="token string">\'Field B\'</span><span class="token punctuation">,</span>\n      description<span class="token operator">:</span> <span class="token string">\'She\\\'s smiling at me, it\\\'s weird.\'</span>\n    <span class="token punctuation">}</span>\n  <span class="token punctuation">]</span><span class="token punctuation">;</span>\n\n\n  <span class="token keyword">return</span> <span class="token punctuation">(</span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">className</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>App<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token plain-text">\n      </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h1</span><span class="token punctuation">></span></span><span class="token plain-text">MY COWS</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h1</span><span class="token punctuation">></span></span><span class="token plain-text">\n\n      </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>section</span> <span class="token attr-name">className</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>cows<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token plain-text">\n        </span><span class="token punctuation">{</span>\n          cows<span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token parameter">cow</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n            <span class="token keyword">return</span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Cow</span></span> <span class="token attr-name">cow</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>cow<span class="token punctuation">}</span></span> <span class="token attr-name">key</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>cow<span class="token punctuation">.</span>name<span class="token punctuation">}</span></span> <span class="token punctuation">/></span></span><span class="token punctuation">;</span>\n          <span class="token punctuation">}</span><span class="token punctuation">)</span>\n        <span class="token punctuation">}</span><span class="token plain-text">\n      </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>section</span><span class="token punctuation">></span></span><span class="token plain-text">\n    </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>\n  <span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n</code></pre>\n<p>When refactoring this code, we are confident because we are sure to generate the same html output thanks to our snapshot tests.</p>\n<h3>Deleting the snapshot tests</h3>\n<p>Refactoring is done, so we don\'t need the snapshot tests anymore. The snapshot tests helped the cowboy to refactor code and to create a Cow component, but now refactoring is done the first test is useless. This snapshot test has no value anymore.</p>\n<p>As DOM is something very versatile, the HTML structure will likely change. This kind of tests will bring many false negative results, lots of noise while changing some HTML/CSS. It has now become something more annoying than helpful.</p>\n<p>Let\'s execute our cowboy’s favorite command <code>rm ./src/App.snapshot.spec.js</code>!</p>\n<h2>What\'s next?</h2>\n<p>In this first article, our cowboy developer refactors a very simple piece of code, there is no logic in this app. In the next article, we will complexify our Cow application, introducing along the way another tool to make property-based-testing.</p>\n<p>Stay tuned!</p>\n<hr>\n<p>The code of <a href="https://github.com/FBerthelot/my-cows-react-refactoring-kata">the repository is here</a> and you can navigate between steps with a branch system.</p>\n</section>\n',date:new Date("2020-06-04"),description:"\n      You want to refactor a big React codebase but you're not sure you won't break anything?\n      The first part of my guide will guide you through this!\n    "}].map((function(s){return function(n){for(var i=1;i<arguments.length;i++){var source=null!=arguments[i]?arguments[i]:{};i%2?M(Object(source),!0).forEach((function(t){Object(c.a)(n,t,source[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(n,Object.getOwnPropertyDescriptors(source)):M(Object(source)).forEach((function(t){Object.defineProperty(n,t,Object.getOwnPropertyDescriptor(source,t))}))}return n}({},s,{type:"article"})}));function z(object,n){var t=Object.keys(object);if(Object.getOwnPropertySymbols){var e=Object.getOwnPropertySymbols(object);n&&(e=e.filter((function(n){return Object.getOwnPropertyDescriptor(object,n).enumerable}))),t.push.apply(t,e)}return t}var F=[{name:"component-test-utils",metaInfo:{fr:"Beta public",en:"Beta public"},description:{fr:"\n    Un outils entre enzyme et test-utils qui permet de tester des composants.\n<br/><br/>\n    Pour l'instant seul react est supporté, mais si le projet prends, alors d'autres frameworks verrons le jour\n",en:"\n    A tool between Enzyme and Test-Utils to test components.\n    <br/><br/>\n    Only React is supported now, but if this project meets it's public, other frameworks will be supported.\n  "},link:"https://component-test-utils.berthelot.io/"},{name:"WeFacto",metaInfo:{fr:"En construction",en:"Work In Progress"},description:{fr:"\n    C'est ma boite! Pour l'instant je me vends en tant que dev freelance.\n",en:"My brand new company! For now I sell myself as a freelance web developer."}},{name:"Coach'A",metaInfo:{fr:"En construction",en:"Work In Progress"},description:{fr:"\n    Application de sport qui s'adapte un maximum aux utilisateurs et à leur environnement.\n",en:"Sport app that adapts itself to it's users and their environnement."}},{name:"Aqua-compose",metaInfo:{fr:"En construction",en:"Work In Progress"},description:{fr:"\n    Application permettant de gérer le vivant des aquariums.\n",en:"App to manage aquariums' fauna."}}].map((function(s){return function(n){for(var i=1;i<arguments.length;i++){var source=null!=arguments[i]?arguments[i]:{};i%2?z(Object(source),!0).forEach((function(t){Object(c.a)(n,t,source[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(n,Object.getOwnPropertyDescriptors(source)):z(Object(source)).forEach((function(t){Object.defineProperty(n,t,Object.getOwnPropertyDescriptor(source,t))}))}return n}({},s,{type:"project"})}));function W(object,n){var t=Object.keys(object);if(Object.getOwnPropertySymbols){var e=Object.getOwnPropertySymbols(object);n&&(e=e.filter((function(n){return Object.getOwnPropertyDescriptor(object,n).enumerable}))),t.push.apply(t,e)}return t}var J=[{title:"Les framework JavaScript",description:"Slide issue d'une matinal sur les Framework JavaScript.",url:"https://docs.google.com/presentation/d/1l7pXU3k2dDEo1MOleZF22hsWQlYbUuBiSjhzLNJaxpE/edit#slide=id.g1e43053bed_0_176"},{title:"Headless CMS",description:"Retour d'expérience sur l'utilisation des headless CMS",url:"https://slides.com/florentberthelot/headless-cms"},{title:"GraphQL, côté serveur ça donne quoi ?",description:"GraphQL est au top du Hype car c'est fun a utiliser côté client. Oui mais voilà... côté serveur quels sont les implication ?",url:"/slides/graphql-server-side.html"},{title:"Tribu Web Zenika - Soirée Progressive Web App",description:"La Tribu Web de Zenika vous propose une soirée autour des progressive web app.",url:"/slides/tribu-web-pwa.html"},{title:"Tribu Web Zenika - Soirée Web Worker",description:"La Tribu Web de Zenika vous propose une soirée autour des web worker.",url:"/slides/tribu-web-web-worker.html"},{title:"Tribu Web Zenika - TP React",description:"Ma première présentation pour la Tribu Web de Zenika.",url:"/slides/tribu-web-react.html"}].map((function(s){return function(n){for(var i=1;i<arguments.length;i++){var source=null!=arguments[i]?arguments[i]:{};i%2?W(Object(source),!0).forEach((function(t){Object(c.a)(n,t,source[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(n,Object.getOwnPropertyDescriptors(source)):W(Object(source)).forEach((function(t){Object.defineProperty(n,t,Object.getOwnPropertyDescriptor(source,t))}))}return n}({},s,{type:"other"})})),B=j,H=E,$=R,Q=F,V=J;[].concat(Object(o.a)(B),Object(o.a)(H),Object(o.a)(V),Object(o.a)($),Object(o.a)(Q))},184:function(n,t,e){"use strict";e.d(t,"a",(function(){return l}));e(186);var o={props:{face:{type:Number,required:!1,default:null}},data:function(){return{avatars:["/assets/moi.jpg","/assets/alive.gif"],currentAvatar:this.face||0}},mounted:function(){var n=this;null===this.face&&(this.interval=setInterval((function(){n.currentAvatar=(n.currentAvatar+1)%2}),3e4))},destroyed:function(){null===this.face&&clearInterval(this.interval)}},c=(e(194),e(34)),l=Object(c.a)(o,(function(){var n=this.$createElement,t=this._self._c||n;return t("div",{staticClass:"logo"},[t("div",{staticClass:"logo__flip-container"},[t("transition",{attrs:{name:"apear"}},[t("img",{directives:[{name:"show",rawName:"v-show",value:0===this.currentAvatar,expression:"currentAvatar === 0"}],staticClass:"logo__face-a",attrs:{src:this.avatars[0],alt:"my avatar"}})]),this._v(" "),t("transition",{attrs:{name:"apear"}},[t("img",{directives:[{name:"show",rawName:"v-show",value:0!==this.currentAvatar,expression:"currentAvatar !== 0"}],staticClass:"logo__face-b",attrs:{src:this.avatars[1],alt:"my avatar"}})]),this._v(" "),t("img",{staticClass:"logo__face-c",attrs:{src:"/assets/joker.jpg",alt:"joker"}})],1)])}),[],!1,null,"7812f9f4",null).exports},185:function(n,t,e){"use strict";var o=e(175),c=e(184),l=e(214),r={components:{Typography:o.a,Logo:c.a,LanguageSwitcher:l.a},props:{title:{type:String,required:!0},backLink:{type:String,required:!1,default:"/"}}},k=(e(236),e(34)),component=Object(k.a)(r,(function(){var n=this,t=n.$createElement,e=n._self._c||t;return e("header",{staticClass:"header"},[e("div",{staticClass:"header__logo"},[e("nuxt-link",{attrs:{to:n.localePath(n.backLink),"aria-label":"Back to home"}},[e("Logo")],1)],1),n._v(" "),e("Typography",{staticClass:"title",attrs:{variant:"header__title",component:"h1"}},[n._v("\n    "+n._s(n.title)+"\n  ")]),n._v(" "),e("div",{staticClass:"header__actions"},[e("div",{staticClass:"tabs"},[e("nuxt-link",{attrs:{to:n.localePath("/subjects/articles"),tabindex:n.$route.path.includes("/subjects/articles")?-1:0}},[e("Typography",{staticClass:"tab",class:{active:n.$route.path.includes("/subjects/articles")},attrs:{component:"span"}},[n._v("\n          "+n._s(n.$t("nav.articles"))+"\n        ")])],1),n._v(" "),e("nuxt-link",{attrs:{to:n.localePath("/subjects/courses"),tabindex:n.$route.path.includes("/subjects/courses")?-1:0}},[e("Typography",{staticClass:"tab",class:{active:n.$route.path.includes("/subjects/courses")},attrs:{component:"span"}},[n._v("\n          "+n._s(n.$t("nav.courses"))+"\n        ")])],1),n._v(" "),e("nuxt-link",{attrs:{to:n.localePath("/subjects/talks"),tabindex:n.$route.path.includes("/subjects/talks")?-1:0}},[e("Typography",{staticClass:"tab",class:{active:n.$route.path.includes("/subjects/talks")},attrs:{component:"span"}},[n._v("\n          "+n._s(n.$t("nav.talks"))+"\n        ")])],1),n._v(" "),e("nuxt-link",{attrs:{to:n.localePath("/subjects/projects"),tabindex:n.$route.path.includes("/subjects/projects")?-1:0}},[e("Typography",{staticClass:"tab",class:{active:n.$route.path.includes("/subjects/projects")},attrs:{component:"span"}},[n._v("\n          "+n._s(n.$t("nav.projects"))+"\n        ")])],1)],1)]),n._v(" "),e("LanguageSwitcher")],1)}),[],!1,null,"34c11226",null);t.a=component.exports},186:function(n,t,e){"use strict";var o=e(5),c=e(27),l=e(35),r=e(95),k=e(72),d=e(13),m=e(57).f,h=e(74).f,f=e(10).f,v=e(191).trim,w=o.Number,y=w,x=w.prototype,j="Number"==l(e(73)(x)),O="trim"in String.prototype,_=function(n){var t=k(n,!1);if("string"==typeof t&&t.length>2){var e,o,c,l=(t=O?t.trim():v(t,3)).charCodeAt(0);if(43===l||45===l){if(88===(e=t.charCodeAt(2))||120===e)return NaN}else if(48===l){switch(t.charCodeAt(1)){case 66:case 98:o=2,c=49;break;case 79:case 111:o=8,c=55;break;default:return+t}for(var code,r=t.slice(2),i=0,d=r.length;i<d;i++)if((code=r.charCodeAt(i))<48||code>c)return NaN;return parseInt(r,o)}}return+t};if(!w(" 0o1")||!w("0b1")||w("+0x1")){w=function(n){var t=arguments.length<1?0:n,e=this;return e instanceof w&&(j?d((function(){x.valueOf.call(e)})):"Number"!=l(e))?r(new y(_(t)),e,w):_(t)};for(var N,C=e(8)?m(y):"MAX_VALUE,MIN_VALUE,NaN,NEGATIVE_INFINITY,POSITIVE_INFINITY,EPSILON,isFinite,isInteger,isNaN,isSafeInteger,MAX_SAFE_INTEGER,MIN_SAFE_INTEGER,parseFloat,parseInt,isInteger".split(","),S=0;C.length>S;S++)c(y,N=C[S])&&!c(w,N)&&f(w,N,h(y,N));w.prototype=x,x.constructor=w,e(14)(o,"Number",w)}},188:function(n,t,e){"use strict";var o=e(176);e.n(o).a},189:function(n,t,e){(t=e(32)(!1)).push([n.i,".typographyBase[data-v-13b76019]{font-family:Verdana,Geneva,sans-serif}.default[data-v-13b76019]{font-size:1rem;line-height:1.3rem}.meta-info[data-v-13b76019]{font-size:.7rem;line-height:1rem;font-style:italic}.title[data-v-13b76019]{font-family:suicide-squad,Comic Sans MS,Comic Sans,cursive;font-size:3rem;line-height:3rem}.title--small[data-v-13b76019]{font-size:1.5rem}.title--extra-small[data-v-13b76019],.title--small[data-v-13b76019]{font-family:suicide-squad,Comic Sans MS,Comic Sans,cursive;line-height:1.5rem}.title--extra-small[data-v-13b76019]{font-size:1.1rem}.white[data-v-13b76019]{color:var(--color-white)}.light[data-v-13b76019]{color:var(--color-light)}.bright[data-v-13b76019]{color:var(--color-bright)}.medium[data-v-13b76019]{color:var(--color-medium)}.dark[data-v-13b76019]{color:var(--color-dark)}.black[data-v-13b76019]{color:var(--color-black)}",""]),n.exports=t},191:function(n,t,e){var o=e(6),c=e(36),l=e(13),r=e(192),k="["+r+"]",d=RegExp("^"+k+k+"*"),m=RegExp(k+k+"*$"),h=function(n,t,e){var c={},k=l((function(){return!!r[n]()||"​"!="​"[n]()})),d=c[n]=k?t(f):r[n];e&&(c[e]=d),o(o.P+o.F*k,"String",c)},f=h.trim=function(n,t){return n=String(c(n)),1&t&&(n=n.replace(d,"")),2&t&&(n=n.replace(m,"")),n};n.exports=h},192:function(n,t){n.exports="\t\n\v\f\r   ᠎             　\u2028\u2029\ufeff"},194:function(n,t,e){"use strict";var o=e(177);e.n(o).a},195:function(n,t,e){(t=e(32)(!1)).push([n.i,".logo[data-v-7812f9f4]{height:8rem;width:8rem;perspective:50rem}.logo__flip-container[data-v-7812f9f4]{transition:all .6s ease;transform-style:preserve-3d;position:relative}.logo:hover .logo__flip-container[data-v-7812f9f4]{transform:rotateY(180deg)}.logo__face-a[data-v-7812f9f4],.logo__face-b[data-v-7812f9f4],.logo__face-c[data-v-7812f9f4]{-webkit-backface-visibility:hidden;backface-visibility:hidden;position:absolute;top:0;left:0;height:8rem;width:8rem;border-radius:50%}.apear-enter-active[data-v-7812f9f4],.apear-leave-active[data-v-7812f9f4]{transition:all .5s ease}.apear-enter[data-v-7812f9f4],.apear-leave-to[data-v-7812f9f4]{opacity:0}.logo__face-a[data-v-7812f9f4],.logo__face-b[data-v-7812f9f4]{transform:rotateY(0deg)}.logo__face-c[data-v-7812f9f4]{transform:rotateY(180deg)}",""]),n.exports=t},202:function(n,t,e){"use strict";var o=e(178);e.n(o).a},203:function(n,t,e){(t=e(32)(!1)).push([n.i,".footer[data-v-586db0d2]{display:flex;align-items:center;justify-content:space-around;border-bottom:2px solid var(--color-dark);height:5rem;box-sizing:border-box}.social-network[data-v-586db0d2]{display:flex;justify-content:flex-end;padding-right:2rem}.social-network a[data-v-586db0d2]{position:relative;display:inline-block;margin:0 0 -1px;border-bottom:1px solid var(--color-dark);border:1px solid var(--color-dark);border-bottom-color:var(--color-black);background:var(--color-dark);cursor:pointer;padding:1rem;width:6rem;height:5rem;transition:all .5s ease;box-shadow:0 -.25rem .25rem var(--color-black);transform-origin:bottom center;text-decoration:none;text-align:center;box-sizing:border-box;font-size:.8rem}.social-network a img[data-v-586db0d2]{height:2rem;padding:0 1rem}.social-network a[data-v-586db0d2]:focus,.social-network a[data-v-586db0d2]:hover{border-bottom:1px solid var(--color-light);border:1px solid var(--color-light);border-bottom-color:var(--color-black);transform:scale(1.3);box-shadow:0 0 2rem var(--color-light);outline:none;z-index:10}@media screen and (max-width:850px){.social-network[data-v-586db0d2]{justify-content:center;padding:0}.social-network a[data-v-586db0d2]{font-size:.7rem;width:4.5rem;padding:.5rem 0}}",""]),n.exports=t},204:function(n,t,e){"use strict";var o=e(179);e.n(o).a},205:function(n,t,e){(t=e(32)(!1)).push([n.i,".languageSwitcher[data-v-d8211736]{position:absolute;top:1rem;right:1rem}.languageSwitcher a[data-v-d8211736]{color:var(--color-white);text-decoration:none}",""]),n.exports=t},207:function(n,t,e){var content=e(237);"string"==typeof content&&(content=[[n.i,content,""]]),content.locals&&(n.exports=content.locals);(0,e(33).default)("a8be73d8",content,!0,{sourceMap:!1})},214:function(n,t,e){"use strict";var o={components:{Typography:e(175).a}},c=(e(204),e(34)),component=Object(c.a)(o,(function(){var n=this,t=n.$createElement,e=n._self._c||t;return e("Typography",{staticClass:"languageSwitcher"},["en"!==n.$i18n.locale?e("nuxt-link",{attrs:{to:n.switchLocalePath("en")}},[n._v("\n    EN\n  ")]):n._e(),n._v(" "),"fr"!==n.$i18n.locale?e("nuxt-link",{attrs:{to:n.switchLocalePath("fr")}},[n._v("\n    FR\n  ")]):n._e()],1)}),[],!1,null,"d8211736",null);t.a=component.exports},236:function(n,t,e){"use strict";var o=e(207);e.n(o).a},237:function(n,t,e){(t=e(32)(!1)).push([n.i,'.header[data-v-34c11226]{height:9rem;display:flex;align-items:center;justify-content:space-between;border-bottom:1px solid var(--color-dark)}.header__logo[data-v-34c11226]{margin:.5rem}.header__title[data-v-34c11226]{text-align:center}.header__actions[data-v-34c11226],.header__logo[data-v-34c11226],.header__title[data-v-34c11226]{width:33%}.header__actions[data-v-34c11226]{align-self:flex-end}.tabs[data-v-34c11226]{display:flex;justify-content:flex-end;padding-right:2rem}.tabs .tab[data-v-34c11226]{position:relative;display:inline-block;margin:0 1rem -1px;border-top-left-radius:.5rem;border-top-right-radius:.5rem;border-bottom:1px solid var(--color-dark);border:1px solid var(--color-dark);border-bottom-color:var(--color-black);background:var(--color-black);cursor:pointer;padding:1rem;width:6rem;height:3rem;transition:all .5s ease;box-shadow:0 -.25rem .25rem var(--color-black);transform-origin:bottom center;text-decoration:none;text-align:center;box-sizing:border-box}.tabs .tab[data-v-34c11226]:after{position:absolute;content:"";display:block;width:calc(100% + 4rem);height:2rem;left:-2rem;bottom:calc(-2rem - 1px);background-color:var(--color-black)}.tabs :focus .tab[data-v-34c11226]:not(.active),.tabs :hover .tab[data-v-34c11226]:not(.active){border-bottom:1px solid var(--color-light);border:1px solid var(--color-light);border-bottom-color:var(--color-black);transform:scale(1.3);box-shadow:0 0 2rem var(--color-light)}.tabs a[data-v-34c11226]:focus{outline:none}.tabs .tab.active[data-v-34c11226]{border-bottom:1px solid var(--color-light);border:1px solid var(--color-light);border-bottom-color:var(--color-black);box-shadow:0 0 1rem var(--color-light);cursor:default}@media screen and (max-width:850px){.header[data-v-34c11226]{height:auto;flex-direction:column;align-items:center}.header__actions[data-v-34c11226],.header__logo[data-v-34c11226],.header__title[data-v-34c11226]{width:auto}.header__title[data-v-34c11226]{margin-bottom:1rem}.header__actions[data-v-34c11226]{align-self:center}.tabs[data-v-34c11226]{justify-content:center;padding-right:0}.tabs .tab[data-v-34c11226]{padding:.5rem;margin:0 .5rem -1px;width:auto;font-size:.8rem}}',""]),n.exports=t},238:function(n,t){n.exports={name:"Designer, Développeur, créons la différence ! (feat C. Freyd-Foucault)",metaInfo:"Paris Web - Octobre 2019",video:"https://player.vimeo.com/video/381753514",slides:"https://docs.google.com/presentation/d/1KJLG4BcdEWQHLhcvTYIbLxqhph0y052LVoSvMEDMaUk/edit?usp=sharing",description:"\n    On utilise tous une bibliothèque de composants comme Material, Bootstrap & co. C’est très pratique car cela nous fournit un Design System clé en main. Seulement, le projet manque de personnalité et ne se différencie pas.\n    <br/>\n    <br/>\n    Avec notre équipe composée de designers (Cécile) et de développeurs (Florent), comment pouvons-nous donner une identité à nos projets ? Y a-t-il des méthodes que nous pouvons appliquer pour que la production de l’interface soit différenciante, cohérente et agréable ?\n    <br/>\n    <br/>\n    Nous vous proposons donc de définir quelles sont les différentes méthodes et techniques pour y arriver. Nous débuterons par explorer et établir notre identité pour ensuite mettre en place nos éléments fonctionnels et arriver rapidement à un Design System adapté en respectant les normes de l’Atomic Design. Nous vous proposons de partir d’un projet qui a choisi la facilité, où la communication est inexistante dans l’équipe. Nous améliorerons notre manière de travailler de façon itérative pour arriver à construire notre propre Design System au fil des explications théoriques.\n  ",alternatives:[{name:"Bdx.io",video:"https://www.youtube.com/embed/iD0Hy7jsuMc",slide:"https://docs.google.com/presentation/d/1-bbtog4Yzf4rldcejvftwVxhSeMlYzhW8ddjk7EBgcE/edit?usp=sharing",date:"Octobre 2019"},{name:"Devfest Lille",video:"https://www.youtube.com/embed/W6Lo6FkaUm8",slide:"https://docs.google.com/presentation/d/14NBP1g7bBRw159fwQjI5mD4UCXA4MsNzJZB0tWjjJxA/edit?usp=sharing",date:"Juin 2019"},{name:"Best Of Web",video:"https://www.youtube.com/embed/cZfqxLribBc",slide:"https://docs.google.com/presentation/d/14NBP1g7bBRw159fwQjI5mD4UCXA4MsNzJZB0tWjjJxA/edit?usp=sharing",date:"Juin 2019"},{name:"Devoxx 2019",video:"https://www.youtube.com/embed/jXcO7Qu1Gjs",slide:"https://docs.google.com/presentation/d/1TysGKTvqLzjbnMgr5vycZsqMbTXkVJ8JpUAelNA-CC0/edit?usp=sharing",date:"avril 2019"}]}},239:function(n,t){n.exports={name:"React Fiber : une innovation discrète, des implications retentissantes (feat M.Lux et M. Frachet)",metaInfo:"Voxxed Days Luxembourg - Juin 2019",video:"https://www.youtube.com/embed/VtBXexNtVhk",slides:"https://docs.google.com/presentation/d/1zfuQ8tgtcYpUMsyydrD4R88F9NG-c8SguHlR77Mt2J4/edit?usp=sharing",demo:"http://pokemon.lux.frachet.berthelot.io/",description:"\nL’équipe de React a fait de nombreuses annonces à propos de nouvelles APIs ces derniers temps. On parle de : Suspense, Lazy Hooks, Error Boundaries, Time Slicing ou encore Concurrent React.\n<br/><br/>\nIl y a des choses particulièrement intéressantes comme de nouveaux patterns de programmation qui pourraient changer la manière de coder des interfaces dans le futur. Mais il faut avouer qu’il peut devenir difficile de suivre toutes les évolutions proposées et en comprendre la direction.\n<br/><br/>\nL’effervescence autour des nouvelles fonctionnalités a pour origine la ré-implémentation du moteur de React dans sa version 16 : nom de code React Fiber (sorti en septembre 2017). Cette refonte très technique n’a pas fait de buzz et n’a rien changé directement dans l’API. Elle a en revanche libéré un potentiel incroyable pour trouver de nouveaux concepts que Facebook ajoute petit à petit dans sa bibliothèque.\n<br/><br/>\nNous vous proposons de reprendre le sujet dans l’ordre : qu’est ce que React Fiber ? Qu’est ce qui change dans le moteur et ce que cela veut dire pour vous ? Nous nous intéresserons ensuite à chacune des nouveautés (Suspense, Lazy, Hooks, Error Boundaries, Time Slicing, ...) pour en détailler le fonctionnement, ce que cela apporte et son lien avec Fiber.\n  ",alternatives:[{name:"Riviera Dev",slide:"https://docs.google.com/presentation/d/1g8AvGn9tt6Qqjsfegq1TsGnUrnWdStgMehGLjFYKxIc/edit?usp=sharing",date:"Mai 2019"}]}},240:function(n,t){n.exports={name:"La toile en VR (feat B. Jonathan)",metaInfo:"Devoxx France - Avril 2018",video:"https://www.youtube.com/embed/JLhugL7Hvgc",slides:"https://fberthelot.github.io/la_toile_en_vr/",description:"\n  L’émergence de l’Oculus Rift et des casques de VR ont conduit le monde du développement à se réintéresser à la 3D. Jusqu’alors Three.js était une référence quant à la façon dont les développeurs faisaient de la 3D sur les navigateurs web.\n<br /><br />\n  Le Web étant fait pour être simple - si si on vous assure, même le CSS -, il a fallu repenser la manière dont nous faisions de la 3D.\n<br /><br />\n  En premier lieu grâce à l’API WebVR, nous donnant un accès plus franc aux capacités matérielles de nos machines. Puis plus récemment grâce aux nouveaux framework émergeant nous rendant la tâche encore plus simple (et toujours avec moins de lignes de code). Il y a actuellement deux principaux frameworks React VR et A-Frame, dont nous vous expliquerons les différentes approches.\n<br /><br />\n  Nous allons dans cette conférence vous donner les clés pour démarrer en VR facilement et peut-être atterrir dans la réalité augmenté ou même la réalité mixte.\n  "}},241:function(n,t){n.exports={name:"Réconcilions web et audio (feat B. Plouzennec)",metaInfo:"Riviera Dev - mai 2017",slides:"http://slides.com/benjaminplouzennec/reconcilions-web-et-audio#/",description:"\n  Dans la préhistoire du web existait 'bgsound', une balise HTML qui associait un son “d’ambiance” à la page. La mauvaise conception de ces éléments ont amené une haine viscérale envers les sites web lançant de la musique automatiquement. Pourquoi ne pas tout remettre à plat pour repenser ce qu’est l’audio dans le monde du web et ce qu’il peut nous apporter ? Aujourd’hui les nouveaux outils mis à disposition nous permettent de faire énormément de chose, quitte à envisager un retour des sites web avec de la musique.\n<br/><br/>\n  Nous vous proposons de partir d’un riff de guitare acoustique et de transformer ce son vers un solo de guitare électrique digne de Jimi Hendrix à Woodstock – l’autotune n’a qu'à bien se tenir ! – à travers un live coding dans lequel nous réaliserons une pédale de distorsion entièrement Web. Ce sera l’occasion de découvrir par étapes certains éléments techniques comme Distortion, Reverb, Tone balance et l'affichage d’un spectre de son.\n<br/><br/>\n  Et bien sûr, nous analyserons tout au long de cette expérience les erreurs qui peuvent transformer une expérience sensorielle en cauchemar sonore afin d’en déduire les bonnes pratiques à respecter pour favoriser au mieux l’expérience utilisateur !\n"}},242:function(n,t){n.exports={name:"Package ? Tout compris !",metaInfo:"Snowcamp - Février 2017",slides:"https://docs.google.com/presentation/d/1JuNunEmZk8zQf2lJccUP1YfJYRPWzHxgkhD9GQaQIFw/edit?usp=sharing",description:"\n  Le 11 Octobre 2016, Facebook – qui n'utilisait déjà plus NPM – a open-sourcé avec google son propre gestionnaire de paquets :  'yarn'. Comment accueillir la nouvelle ? Doit-on se réjouir – pour sa rapidité notamment – ou s'inquiéter de la disparition potentielle de 'NPM' ?\n<br/><br/>\n  Afin d’avoir un raisonnement logique pour répondre à cette question, je vous invite à prendre du recul sur les gestionnaire de paquets. Quel est leur rôle ? Comment doivent-ils s’utiliser ? Comment être certain d’avoir les même version de nos dépendances en production et en développement ? Comment gérer les dépendances : en arbre, à plat ou même les deux à la fois ? Comment sont stockés ces paquets, peuvent-ils être supprimés ?\n<br/><br/>\n  Continuons notre exploration et nous nous apercevons très vite que les gestionnaires de paquets sont principalement influencés par la manière dont les dépendances sont importées dans notre code. Le TC-39 est en train de réfléchir sur les spécifications du ES Module Loader ; mettons-nous à leur place et voyons quelles sont les différentes options.\n"}},243:function(n,t){n.exports={name:"Angular",description:"\n    Cours d'une semaine pour l'apprentisage du framework de Google.\n    JavaScript, TypeScript, Angulartous les sujets pour construire une applications web sont abordé\n    avec une alternance Théorie et de Travaux pratiques.\n  ",url:"https://slides.com/florentberthelot/angular/fullscreen"}},244:function(n,t){n.exports={name:"JavaScript",description:"\n    Chaque année, l'organisme de standartidation ECMA International met à jour la spécification EcmaScript.\n\n    Ces slides présentent l'ensemble du langage JavaScript passée, présent et future.\n\n    <br /></br>\n\n    Idéal pour commencer le JavaScript.\n  ",url:"/slides/javascript.html",external:!0}},245:function(n,t){n.exports={name:"Les modules en JavaScript",description:"\n    L'histoire de la séparation en plusieurs fichiers des applications JavaScript a été et est encore assez mouvementé.\n\n    <br></br>\n    Voyons ensemble les enjeux de Node.js, des navigateurs et de Ecma International.\n  ",url:"/slides/es-modules.html"}},246:function(n,t){n.exports={name:"Redux & co",description:"\n  Redux, certain l'aime, d'autres le deteste.\n  <br/><br/>\n  Avant d'apprendre ce qu'est redux, penchons nous sur les problèmes qu'il résoud.\n  ",url:"https://slides.com/florentberthelot/what-is-redux-and-all-redux-like"}},247:function(n,t){n.exports={name:"Tester des composants",description:"\n    Les tests unitaires fronts sont souvent considéré comme innutiles et complexes.\n    <br/><br/>\n    Démystifions les tests unitaires de composants React, Vue.js ou Angular.\n  ",url:"https://slides.com/florentberthelot/test-composants-web"}}}]);